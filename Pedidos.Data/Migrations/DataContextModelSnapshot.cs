// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pedidos.Data.Context;

namespace Pedidos.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5");

            modelBuilder.Entity("Pedidos.Domain.Entities.Fornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CNPJ")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailContato")
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeContato")
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeRazaoSocial")
                        .HasColumnType("TEXT");

                    b.Property<string>("UF")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Fornecedores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CNPJ = "86673673000128",
                            EmailContato = "fiscal@franciscoecarloscomerciodebebidasme.com.br",
                            NomeContato = "Juca",
                            NomeRazaoSocial = "Francisco e Carlos Comercio de Bebidas ME",
                            UF = "DF"
                        },
                        new
                        {
                            Id = 2,
                            CNPJ = "55738477000160",
                            EmailContato = "auditoria@isabellyemanoelpizzarialtda.com.br",
                            NomeContato = "Isabelly",
                            NomeRazaoSocial = "Isabelly e Manoel Pizzaria Ltda",
                            UF = "DF"
                        },
                        new
                        {
                            Id = 3,
                            CNPJ = "07805502000139",
                            EmailContato = "fiscal@sebastiaoegeraldograficame.com.br",
                            NomeContato = "Sebastião",
                            NomeRazaoSocial = "Sebastião e Geraldo Gráfica ME",
                            UF = "DF"
                        });
                });

            modelBuilder.Entity("Pedidos.Domain.Entities.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataPedido")
                        .HasColumnType("TEXT");

                    b.Property<int>("FornecedorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("QuantidadeProdutos")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("ValorTotalPedido")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("Pedidos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataPedido = new DateTime(2024, 3, 25, 15, 43, 29, 490, DateTimeKind.Local).AddTicks(7682),
                            FornecedorId = 1,
                            ProdutoId = 1,
                            QuantidadeProdutos = 5,
                            ValorTotalPedido = 0m
                        },
                        new
                        {
                            Id = 2,
                            DataPedido = new DateTime(2024, 3, 25, 15, 43, 29, 490, DateTimeKind.Local).AddTicks(7862),
                            FornecedorId = 2,
                            ProdutoId = 2,
                            QuantidadeProdutos = 5,
                            ValorTotalPedido = 0m
                        },
                        new
                        {
                            Id = 3,
                            DataPedido = new DateTime(2024, 3, 25, 15, 43, 29, 490, DateTimeKind.Local).AddTicks(7868),
                            FornecedorId = 3,
                            ProdutoId = 3,
                            QuantidadeProdutos = 5,
                            ValorTotalPedido = 0m
                        });
                });

            modelBuilder.Entity("Pedidos.Domain.Entities.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ValorProduto")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Produtos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCadastro = new DateTime(2024, 3, 25, 15, 43, 29, 489, DateTimeKind.Local).AddTicks(9230),
                            Descricao = "água",
                            ValorProduto = 10m
                        },
                        new
                        {
                            Id = 2,
                            DataCadastro = new DateTime(2024, 3, 25, 15, 43, 29, 490, DateTimeKind.Local).AddTicks(5725),
                            Descricao = "terra",
                            ValorProduto = 1000m
                        },
                        new
                        {
                            Id = 3,
                            DataCadastro = new DateTime(2024, 3, 25, 15, 43, 29, 490, DateTimeKind.Local).AddTicks(5749),
                            Descricao = "tijolo",
                            ValorProduto = 5000m
                        });
                });

            modelBuilder.Entity("Pedidos.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("Password")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue("TesteTemplate");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2020, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "userdefault@Pedidos.com",
                            IsDeleted = false,
                            Name = "User Default"
                        });
                });

            modelBuilder.Entity("Pedidos.Domain.Entities.Pedido", b =>
                {
                    b.HasOne("Pedidos.Domain.Entities.Fornecedor", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pedidos.Domain.Entities.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
